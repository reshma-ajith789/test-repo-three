name: Build and Package Angular app v2

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'main'

jobs:
  build-package:
    name: Build and Package
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear cache
        run: npm cache clean --force

      - name: Install Dependencies
        run: npm install

      - name: Build Angular App
        run: npm run build

      # Upload Angular dist folder as a GitHub artifact
      - name: Upload Angular Dist Folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Prepare Deployment Package
        run: |
          mkdir -p deploy
          # Copy Angular build output
          cp -r dist deploy/
          # Copy server.js, package.json, etc.
          cp artifacts/server.js deploy/
          cp artifacts/package.json deploy/
          if [ -d "artifacts/.ebextensions" ]; then
            cp -r artifacts/.ebextensions deploy/
          fi
          cd deploy
          zip -r ../testone-${{ github.run_number }}.zip .
          
      - name: Unzip and List Contents of Deployment Package
        run: |
          unzip -l testone-${{ github.run_number }}.zip
          
      - name: Upload Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package-artifact
          path: testone-${{ github.run_number }}.zip

  deployment:
    name: Deployment to AWS
    runs-on: self-hosted
    needs: build-package

    steps:
      - name: Set Version Label
        run: echo "VERSION_LABEL=1.8.${{ github.run_number }}" >> $GITHUB_ENV
    
      - name: Upload Deployment ZIP to S3
        run: |
          aws s3 cp testone-${{ github.run_number }}.zip s3://elasticbeanstalk-eu-central-1-041063310378/testone-${{ github.run_number }}.zip
          
      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name NodeJS-app8 \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket="elasticbeanstalk-eu-central-1-041063310378",S3Key="testone-${{ github.run_number }}.zip" \
            --region eu-central-1
          aws elasticbeanstalk update-environment \
            --application-name NodeJS-app8 \
            --environment-name NodeJS-app8-env \
            --version-label $VERSION_LABEL \
            --region eu-central-1
